/**
 * 4x6 monochrome bitmap font for rendering
 * Author: Luiz Bills <luizbills@pm.me>
 *
 * License: Public Domain
 *
 * Based on the following projects:
 * - https://github.com/dhepper/font8x8
 * - https://alasseearfalas.itch.io/another-tiny-pixel-font-mono-3x5
 */

#include <stdint.h>

// Contains an 8x8 font map for unicode points U+0000 - U+007F (basic latin)
uint8_t font4x6_basic[128][6] = {
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0000 (null)
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0001
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0002
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0003
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0004
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0005
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0006
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0007
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0008
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0009
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+000A
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+000B
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+000C
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+000D
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+000E
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+000F
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0010
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0011
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0012
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0013
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0014
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0015
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0016
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0017
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0018
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0019
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+001A
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+001B
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+001C
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+001D
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+001E
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+001F
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, // U+0020 (space)
    { 0x02, 0x02, 0x02, 0x00, 0x02, 0x00 }, // U+0021 (!)
    { 0x05, 0x05, 0x00, 0x00, 0x00, 0x00 }, // U+0022 (")
    { 0x05, 0x07, 0x05, 0x07, 0x05, 0x00 }, // U+0023 (#)
    { 0x06, 0x03, 0x06, 0x07, 0x02, 0x00 }, // U+0024 ($)
    { 0x05, 0x04, 0x02, 0x01, 0x05, 0x00 }, // U+0025 (%)
    { 0x06, 0x03, 0x06, 0x05, 0x06, 0x00 }, // U+0026 (&)
    { 0x02, 0x02, 0x00, 0x00, 0x00, 0x00 }, // U+0027 (')
    { 0x02, 0x01, 0x01, 0x01, 0x02, 0x00 }, // U+0028 (()
    { 0x02, 0x04, 0x04, 0x04, 0x02, 0x00 }, // U+0029 ())
    { 0x05, 0x02, 0x05, 0x00, 0x00, 0x00 }, // U+002a (*)
    { 0x00, 0x02, 0x07, 0x02, 0x00, 0x00 }, // U+002b (+)
    { 0x00, 0x00, 0x00, 0x00, 0x02, 0x01 }, // U+002c (,)
    { 0x00, 0x00, 0x07, 0x00, 0x00, 0x00 }, // U+002d (-)
    { 0x00, 0x00, 0x00, 0x00, 0x01, 0x00 }, // U+002e (.)
    { 0x04, 0x04, 0x02, 0x01, 0x01, 0x00 }, // U+002f (/)
    { 0x07, 0x05, 0x05, 0x05, 0x07, 0x00 }, // U+0030 (0)
    { 0x03, 0x02, 0x02, 0x02, 0x07, 0x00 }, // U+0031 (1)
    { 0x07, 0x04, 0x07, 0x01, 0x07, 0x00 }, // U+0032 (2)
    { 0x07, 0x04, 0x07, 0x04, 0x07, 0x00 }, // U+0033 (3)
    { 0x05, 0x05, 0x07, 0x04, 0x04, 0x00 }, // U+0034 (4)
    { 0x07, 0x01, 0x07, 0x04, 0x07, 0x00 }, // U+0035 (5)
    { 0x07, 0x01, 0x07, 0x05, 0x07, 0x00 }, // U+0036 (6)
    { 0x07, 0x04, 0x04, 0x04, 0x04, 0x00 }, // U+0037 (7)
    { 0x07, 0x05, 0x07, 0x05, 0x07, 0x00 }, // U+0038 (8)
    { 0x07, 0x05, 0x07, 0x04, 0x07, 0x00 }, // U+0039 (9)
    { 0x00, 0x02, 0x00, 0x02, 0x00, 0x00 }, // U+003a (:)
    { 0x00, 0x00, 0x02, 0x00, 0x02, 0x01 }, // U+003b (;)
    { 0x04, 0x02, 0x01, 0x02, 0x04, 0x00 }, // U+003c (<)
    { 0x00, 0x07, 0x00, 0x07, 0x00, 0x00 }, // U+003d (=)
    { 0x01, 0x02, 0x04, 0x02, 0x01, 0x00 }, // U+003e (>)
    { 0x07, 0x04, 0x06, 0x00, 0x02, 0x00 }, // U+003f (?)
    { 0x02, 0x05, 0x05, 0x01, 0x06, 0x00 }, // U+0040 (@)
    { 0x02, 0x05, 0x07, 0x05, 0x05, 0x00 }, // U+0041 (A)
    { 0x03, 0x05, 0x03, 0x05, 0x03, 0x00 }, // U+0042 (B)
    { 0x06, 0x01, 0x01, 0x01, 0x06, 0x00 }, // U+0043 (C)
    { 0x03, 0x05, 0x05, 0x05, 0x03, 0x00 }, // U+0044 (D)
    { 0x07, 0x01, 0x03, 0x01, 0x07, 0x00 }, // U+0045 (E)
    { 0x07, 0x01, 0x03, 0x01, 0x01, 0x00 }, // U+0046 (F)
    { 0x06, 0x01, 0x05, 0x05, 0x06, 0x00 }, // U+0047 (G)
    { 0x05, 0x05, 0x07, 0x05, 0x05, 0x00 }, // U+0048 (H)
    { 0x07, 0x02, 0x02, 0x02, 0x07, 0x00 }, // U+0049 (I)
    { 0x04, 0x04, 0x04, 0x05, 0x02, 0x00 }, // U+004a (J)
    { 0x05, 0x05, 0x03, 0x05, 0x05, 0x00 }, // U+004b (K)
    { 0x01, 0x01, 0x01, 0x01, 0x07, 0x00 }, // U+004c (L)
    { 0x05, 0x07, 0x07, 0x05, 0x05, 0x00 }, // U+004d (M)
    { 0x07, 0x05, 0x05, 0x05, 0x05, 0x00 }, // U+004e (N)
    { 0x02, 0x05, 0x05, 0x05, 0x02, 0x00 }, // U+004f (O)
    { 0x07, 0x05, 0x07, 0x01, 0x01, 0x00 }, // U+0050 (P)
    { 0x06, 0x05, 0x05, 0x03, 0x06, 0x00 }, // U+0051 (Q)
    { 0x03, 0x05, 0x03, 0x05, 0x05, 0x00 }, // U+0052 (R)
    { 0x06, 0x01, 0x07, 0x04, 0x03, 0x00 }, // U+0053 (S)
    { 0x07, 0x02, 0x02, 0x02, 0x02, 0x00 }, // U+0054 (T)
    { 0x05, 0x05, 0x05, 0x05, 0x07, 0x00 }, // U+0055 (U)
    { 0x05, 0x05, 0x05, 0x02, 0x02, 0x00 }, // U+0056 (V)
    { 0x05, 0x05, 0x07, 0x07, 0x05, 0x00 }, // U+0057 (W)
    { 0x05, 0x05, 0x02, 0x05, 0x05, 0x00 }, // U+0058 (X)
    { 0x05, 0x05, 0x02, 0x02, 0x02, 0x00 }, // U+0059 (Y)
    { 0x07, 0x04, 0x02, 0x01, 0x07, 0x00 }, // U+005a (Z)
    { 0x06, 0x02, 0x02, 0x02, 0x06, 0x00 }, // U+005b ([)
    { 0x01, 0x01, 0x02, 0x04, 0x04, 0x00 }, // U+005c (\)
    { 0x03, 0x02, 0x02, 0x02, 0x03, 0x00 }, // U+005d (])
    { 0x02, 0x05, 0x00, 0x00, 0x00, 0x00 }, // U+005e (^)
    { 0x00, 0x00, 0x00, 0x00, 0x07, 0x00 }, // U+005f (_)
    { 0x01, 0x02, 0x00, 0x00, 0x00, 0x00 }, // U+0060 (`)
    { 0x00, 0x06, 0x05, 0x05, 0x06, 0x00 }, // U+0061 (a)
    { 0x01, 0x03, 0x05, 0x05, 0x03, 0x00 }, // U+0062 (b)
    { 0x00, 0x06, 0x01, 0x01, 0x06, 0x00 }, // U+0063 (c)
    { 0x04, 0x06, 0x05, 0x05, 0x06, 0x00 }, // U+0064 (d)
    { 0x00, 0x02, 0x05, 0x03, 0x06, 0x00 }, // U+0065 (e)
    { 0x04, 0x02, 0x07, 0x02, 0x02, 0x00 }, // U+0066 (f)
    { 0x00, 0x02, 0x05, 0x06, 0x04, 0x02 }, // U+0067 (g)
    { 0x01, 0x01, 0x03, 0x05, 0x05, 0x00 }, // U+0068 (h)
    { 0x00, 0x02, 0x00, 0x02, 0x02, 0x00 }, // U+0069 (i)
    { 0x00, 0x02, 0x00, 0x02, 0x02, 0x01 }, // U+006a (j)
    { 0x01, 0x05, 0x03, 0x05, 0x05, 0x00 }, // U+006b (k)
    { 0x02, 0x02, 0x02, 0x02, 0x04, 0x00 }, // U+006c (l)
    { 0x00, 0x05, 0x07, 0x05, 0x05, 0x00 }, // U+006d (m)
    { 0x00, 0x03, 0x05, 0x05, 0x05, 0x00 }, // U+006e (n)
    { 0x00, 0x02, 0x05, 0x05, 0x02, 0x00 }, // U+006f (o)
    { 0x00, 0x03, 0x05, 0x05, 0x03, 0x01 }, // U+0070 (p)
    { 0x00, 0x06, 0x05, 0x05, 0x06, 0x04 }, // U+0071 (q)
    { 0x00, 0x02, 0x05, 0x01, 0x01, 0x00 }, // U+0072 (r)
    { 0x00, 0x06, 0x01, 0x04, 0x03, 0x00 }, // U+0073 (s)
    { 0x02, 0x07, 0x02, 0x02, 0x04, 0x00 }, // U+0074 (t)
    { 0x00, 0x05, 0x05, 0x05, 0x06, 0x00 }, // U+0075 (u)
    { 0x00, 0x05, 0x05, 0x02, 0x02, 0x00 }, // U+0076 (v)
    { 0x00, 0x05, 0x05, 0x07, 0x05, 0x00 }, // U+0077 (w)
    { 0x00, 0x05, 0x02, 0x02, 0x05, 0x00 }, // U+0078 (x)
    { 0x00, 0x05, 0x05, 0x06, 0x04, 0x02 }, // U+0079 (y)
    { 0x00, 0x07, 0x04, 0x01, 0x07, 0x00 }, // U+007a (z)
    { 0x06, 0x02, 0x01, 0x02, 0x06, 0x00 }, // U+007b ({)
    { 0x02, 0x02, 0x02, 0x02, 0x02, 0x00 }, // U+007c (|)
    { 0x03, 0x02, 0x04, 0x02, 0x03, 0x00 }, // U+007d (})
    { 0x00, 0x03, 0x06, 0x00, 0x00, 0x00 }, // U+007e (~)
    { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }  // U+007f
};
